'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="IMACANET")>  _
Partial Public Class DB_GENERALDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertGEN_MENU_PERFIL(instance As GEN_MENU_PERFIL)
    End Sub
  Partial Private Sub UpdateGEN_MENU_PERFIL(instance As GEN_MENU_PERFIL)
    End Sub
  Partial Private Sub DeleteGEN_MENU_PERFIL(instance As GEN_MENU_PERFIL)
    End Sub
  Partial Private Sub InsertGEN_OPCION_MENU(instance As GEN_OPCION_MENU)
    End Sub
  Partial Private Sub UpdateGEN_OPCION_MENU(instance As GEN_OPCION_MENU)
    End Sub
  Partial Private Sub DeleteGEN_OPCION_MENU(instance As GEN_OPCION_MENU)
    End Sub
  Partial Private Sub InsertGEN_MENU(instance As GEN_MENU)
    End Sub
  Partial Private Sub UpdateGEN_MENU(instance As GEN_MENU)
    End Sub
  Partial Private Sub DeleteGEN_MENU(instance As GEN_MENU)
    End Sub
  Partial Private Sub InsertGEN_CONFIG(instance As GEN_CONFIG)
    End Sub
  Partial Private Sub UpdateGEN_CONFIG(instance As GEN_CONFIG)
    End Sub
  Partial Private Sub DeleteGEN_CONFIG(instance As GEN_CONFIG)
    End Sub
  Partial Private Sub InsertGEN_HIST_PASS(instance As GEN_HIST_PASS)
    End Sub
  Partial Private Sub UpdateGEN_HIST_PASS(instance As GEN_HIST_PASS)
    End Sub
  Partial Private Sub DeleteGEN_HIST_PASS(instance As GEN_HIST_PASS)
    End Sub
  Partial Private Sub InsertGEN_PERFIL_ANDROID(instance As GEN_PERFIL_ANDROID)
    End Sub
  Partial Private Sub UpdateGEN_PERFIL_ANDROID(instance As GEN_PERFIL_ANDROID)
    End Sub
  Partial Private Sub DeleteGEN_PERFIL_ANDROID(instance As GEN_PERFIL_ANDROID)
    End Sub
  Partial Private Sub InsertGEN_USUARIO(instance As GEN_USUARIO)
    End Sub
  Partial Private Sub UpdateGEN_USUARIO(instance As GEN_USUARIO)
    End Sub
  Partial Private Sub DeleteGEN_USUARIO(instance As GEN_USUARIO)
    End Sub
  Partial Private Sub InsertGEN_PERFIL(instance As GEN_PERFIL)
    End Sub
  Partial Private Sub UpdateGEN_PERFIL(instance As GEN_PERFIL)
    End Sub
  Partial Private Sub DeleteGEN_PERFIL(instance As GEN_PERFIL)
    End Sub
  Partial Private Sub InsertGEN_MODULO(instance As GEN_MODULO)
    End Sub
  Partial Private Sub UpdateGEN_MODULO(instance As GEN_MODULO)
    End Sub
  Partial Private Sub DeleteGEN_MODULO(instance As GEN_MODULO)
    End Sub
  Partial Private Sub InsertGEN_FORMULARIO(instance As GEN_FORMULARIO)
    End Sub
  Partial Private Sub UpdateGEN_FORMULARIO(instance As GEN_FORMULARIO)
    End Sub
  Partial Private Sub DeleteGEN_FORMULARIO(instance As GEN_FORMULARIO)
    End Sub
  Partial Private Sub InsertGEN_PIVOT_LAYOUT(instance As GEN_PIVOT_LAYOUT)
    End Sub
  Partial Private Sub UpdateGEN_PIVOT_LAYOUT(instance As GEN_PIVOT_LAYOUT)
    End Sub
  Partial Private Sub DeleteGEN_PIVOT_LAYOUT(instance As GEN_PIVOT_LAYOUT)
    End Sub
  Partial Private Sub InsertAUDI_CUEN_MONEDAS(instance As AUDI_CUEN_MONEDAS)
    End Sub
  Partial Private Sub UpdateAUDI_CUEN_MONEDAS(instance As AUDI_CUEN_MONEDAS)
    End Sub
  Partial Private Sub DeleteAUDI_CUEN_MONEDAS(instance As AUDI_CUEN_MONEDAS)
    End Sub
  Partial Private Sub InsertAUDI_CUEN_FILIALES(instance As AUDI_CUEN_FILIALES)
    End Sub
  Partial Private Sub UpdateAUDI_CUEN_FILIALES(instance As AUDI_CUEN_FILIALES)
    End Sub
  Partial Private Sub DeleteAUDI_CUEN_FILIALES(instance As AUDI_CUEN_FILIALES)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.IMACANET.My.MySettings.Default.IMACANETConnectionString13, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property GEN_MENU_PERFIL() As System.Data.Linq.Table(Of GEN_MENU_PERFIL)
		Get
			Return Me.GetTable(Of GEN_MENU_PERFIL)
		End Get
	End Property
	
	Public ReadOnly Property GEN_OPCION_MENU() As System.Data.Linq.Table(Of GEN_OPCION_MENU)
		Get
			Return Me.GetTable(Of GEN_OPCION_MENU)
		End Get
	End Property
	
	Public ReadOnly Property GEN_MENU() As System.Data.Linq.Table(Of GEN_MENU)
		Get
			Return Me.GetTable(Of GEN_MENU)
		End Get
	End Property
	
	Public ReadOnly Property V_GEN_MENU_PERFIL() As System.Data.Linq.Table(Of V_GEN_MENU_PERFIL)
		Get
			Return Me.GetTable(Of V_GEN_MENU_PERFIL)
		End Get
	End Property
	
	Public ReadOnly Property GEN_CONFIG() As System.Data.Linq.Table(Of GEN_CONFIG)
		Get
			Return Me.GetTable(Of GEN_CONFIG)
		End Get
	End Property
	
	Public ReadOnly Property GEN_HIST_PASS() As System.Data.Linq.Table(Of GEN_HIST_PASS)
		Get
			Return Me.GetTable(Of GEN_HIST_PASS)
		End Get
	End Property
	
	Public ReadOnly Property GEN_PERFIL_ANDROID() As System.Data.Linq.Table(Of GEN_PERFIL_ANDROID)
		Get
			Return Me.GetTable(Of GEN_PERFIL_ANDROID)
		End Get
	End Property
	
	Public ReadOnly Property GEN_USUARIO() As System.Data.Linq.Table(Of GEN_USUARIO)
		Get
			Return Me.GetTable(Of GEN_USUARIO)
		End Get
	End Property
	
	Public ReadOnly Property V_GEN_USUARIO() As System.Data.Linq.Table(Of V_GEN_USUARIO)
		Get
			Return Me.GetTable(Of V_GEN_USUARIO)
		End Get
	End Property
	
	Public ReadOnly Property GEN_PERFIL() As System.Data.Linq.Table(Of GEN_PERFIL)
		Get
			Return Me.GetTable(Of GEN_PERFIL)
		End Get
	End Property
	
	Public ReadOnly Property V_GEN_FORMULARIO() As System.Data.Linq.Table(Of V_GEN_FORMULARIO)
		Get
			Return Me.GetTable(Of V_GEN_FORMULARIO)
		End Get
	End Property
	
	Public ReadOnly Property V_GEN_OPCION_MENU() As System.Data.Linq.Table(Of V_GEN_OPCION_MENU)
		Get
			Return Me.GetTable(Of V_GEN_OPCION_MENU)
		End Get
	End Property
	
	Public ReadOnly Property GEN_MODULO() As System.Data.Linq.Table(Of GEN_MODULO)
		Get
			Return Me.GetTable(Of GEN_MODULO)
		End Get
	End Property
	
	Public ReadOnly Property GEN_FORMULARIO() As System.Data.Linq.Table(Of GEN_FORMULARIO)
		Get
			Return Me.GetTable(Of GEN_FORMULARIO)
		End Get
	End Property
	
	Public ReadOnly Property V_GEN_MENU_PERFIL_AUX() As System.Data.Linq.Table(Of V_GEN_MENU_PERFIL_AUX)
		Get
			Return Me.GetTable(Of V_GEN_MENU_PERFIL_AUX)
		End Get
	End Property
	
	Public ReadOnly Property GEN_PIVOT_LAYOUT() As System.Data.Linq.Table(Of GEN_PIVOT_LAYOUT)
		Get
			Return Me.GetTable(Of GEN_PIVOT_LAYOUT)
		End Get
	End Property
	
	Public ReadOnly Property AUDI_CUEN_MONEDAS() As System.Data.Linq.Table(Of AUDI_CUEN_MONEDAS)
		Get
			Return Me.GetTable(Of AUDI_CUEN_MONEDAS)
		End Get
	End Property
	
	Public ReadOnly Property AUDI_CUEN_FILIALES() As System.Data.Linq.Table(Of AUDI_CUEN_FILIALES)
		Get
			Return Me.GetTable(Of AUDI_CUEN_FILIALES)
		End Get
	End Property
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.VALI_USUARIO")>  _
	Public Function VALI_USUARIO(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="CD_LOGIN", DbType:="VarChar(50)")> ByVal cD_LOGIN As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="CD_PASSWORD", DbType:="VarChar(50)")> ByVal cD_PASSWORD As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="RESPUESTA", DbType:="Bit")> ByRef rESPUESTA As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="MSJ", DbType:="VarChar(100)")> ByRef mSJ As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), cD_LOGIN, cD_PASSWORD, rESPUESTA, mSJ)
		rESPUESTA = CType(result.GetParameterValue(2),System.Nullable(Of Boolean))
		mSJ = CType(result.GetParameterValue(3),String)
		Return CType(result.ReturnValue,Integer)
	End Function
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.GEN_MENU_PERFIL")>  _
Partial Public Class GEN_MENU_PERFIL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _ID_PERFIL As Integer
	
	Private _ID_OPC_MENU As Integer
	
	Private _FLG_LECTURA As System.Nullable(Of Char)
	
	Private _GEN_OPCION_MENU As EntityRef(Of GEN_OPCION_MENU)
	
	Private _GEN_PERFIL As EntityRef(Of GEN_PERFIL)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnID_PERFILChanging(value As Integer)
    End Sub
    Partial Private Sub OnID_PERFILChanged()
    End Sub
    Partial Private Sub OnID_OPC_MENUChanging(value As Integer)
    End Sub
    Partial Private Sub OnID_OPC_MENUChanged()
    End Sub
    Partial Private Sub OnFLG_LECTURAChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnFLG_LECTURAChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._GEN_OPCION_MENU = CType(Nothing, EntityRef(Of GEN_OPCION_MENU))
		Me._GEN_PERFIL = CType(Nothing, EntityRef(Of GEN_PERFIL))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID_PERFIL", DbType:="Int NOT NULL")>  _
	Public Property ID_PERFIL() As Integer
		Get
			Return Me._ID_PERFIL
		End Get
		Set
			If ((Me._ID_PERFIL = value)  _
						= false) Then
				If Me._GEN_PERFIL.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnID_PERFILChanging(value)
				Me.SendPropertyChanging
				Me._ID_PERFIL = value
				Me.SendPropertyChanged("ID_PERFIL")
				Me.OnID_PERFILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID_OPC_MENU", DbType:="Int NOT NULL")>  _
	Public Property ID_OPC_MENU() As Integer
		Get
			Return Me._ID_OPC_MENU
		End Get
		Set
			If ((Me._ID_OPC_MENU = value)  _
						= false) Then
				If Me._GEN_OPCION_MENU.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnID_OPC_MENUChanging(value)
				Me.SendPropertyChanging
				Me._ID_OPC_MENU = value
				Me.SendPropertyChanged("ID_OPC_MENU")
				Me.OnID_OPC_MENUChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FLG_LECTURA", DbType:="Char(1)")>  _
	Public Property FLG_LECTURA() As System.Nullable(Of Char)
		Get
			Return Me._FLG_LECTURA
		End Get
		Set
			If (Me._FLG_LECTURA.Equals(value) = false) Then
				Me.OnFLG_LECTURAChanging(value)
				Me.SendPropertyChanging
				Me._FLG_LECTURA = value
				Me.SendPropertyChanged("FLG_LECTURA")
				Me.OnFLG_LECTURAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="GEN_OPCION_MENU_GEN_MENU_PERFIL", Storage:="_GEN_OPCION_MENU", ThisKey:="ID_OPC_MENU", OtherKey:="ID", IsForeignKey:=true)>  _
	Public Property GEN_OPCION_MENU() As GEN_OPCION_MENU
		Get
			Return Me._GEN_OPCION_MENU.Entity
		End Get
		Set
			Dim previousValue As GEN_OPCION_MENU = Me._GEN_OPCION_MENU.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._GEN_OPCION_MENU.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._GEN_OPCION_MENU.Entity = Nothing
					previousValue.GEN_MENU_PERFIL.Remove(Me)
				End If
				Me._GEN_OPCION_MENU.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.GEN_MENU_PERFIL.Add(Me)
					Me._ID_OPC_MENU = value.ID
				Else
					Me._ID_OPC_MENU = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("GEN_OPCION_MENU")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="GEN_PERFIL_GEN_MENU_PERFIL", Storage:="_GEN_PERFIL", ThisKey:="ID_PERFIL", OtherKey:="ID", IsForeignKey:=true)>  _
	Public Property GEN_PERFIL() As GEN_PERFIL
		Get
			Return Me._GEN_PERFIL.Entity
		End Get
		Set
			Dim previousValue As GEN_PERFIL = Me._GEN_PERFIL.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._GEN_PERFIL.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._GEN_PERFIL.Entity = Nothing
					previousValue.GEN_MENU_PERFIL.Remove(Me)
				End If
				Me._GEN_PERFIL.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.GEN_MENU_PERFIL.Add(Me)
					Me._ID_PERFIL = value.ID
				Else
					Me._ID_PERFIL = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("GEN_PERFIL")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.GEN_OPCION_MENU")>  _
Partial Public Class GEN_OPCION_MENU
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _ID_MENU As Integer
	
	Private _ID_FORM As Integer
	
	Private _ORDEN As System.Nullable(Of Integer)
	
	Private _GEN_MENU_PERFIL As EntitySet(Of GEN_MENU_PERFIL)
	
	Private _GEN_MENU As EntityRef(Of GEN_MENU)
	
	Private _GEN_FORMULARIO As EntityRef(Of GEN_FORMULARIO)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnID_MENUChanging(value As Integer)
    End Sub
    Partial Private Sub OnID_MENUChanged()
    End Sub
    Partial Private Sub OnID_FORMChanging(value As Integer)
    End Sub
    Partial Private Sub OnID_FORMChanged()
    End Sub
    Partial Private Sub OnORDENChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnORDENChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._GEN_MENU_PERFIL = New EntitySet(Of GEN_MENU_PERFIL)(AddressOf Me.attach_GEN_MENU_PERFIL, AddressOf Me.detach_GEN_MENU_PERFIL)
		Me._GEN_MENU = CType(Nothing, EntityRef(Of GEN_MENU))
		Me._GEN_FORMULARIO = CType(Nothing, EntityRef(Of GEN_FORMULARIO))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID_MENU", DbType:="Int NOT NULL")>  _
	Public Property ID_MENU() As Integer
		Get
			Return Me._ID_MENU
		End Get
		Set
			If ((Me._ID_MENU = value)  _
						= false) Then
				If Me._GEN_MENU.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnID_MENUChanging(value)
				Me.SendPropertyChanging
				Me._ID_MENU = value
				Me.SendPropertyChanged("ID_MENU")
				Me.OnID_MENUChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID_FORM", DbType:="Int NOT NULL")>  _
	Public Property ID_FORM() As Integer
		Get
			Return Me._ID_FORM
		End Get
		Set
			If ((Me._ID_FORM = value)  _
						= false) Then
				If Me._GEN_FORMULARIO.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnID_FORMChanging(value)
				Me.SendPropertyChanging
				Me._ID_FORM = value
				Me.SendPropertyChanged("ID_FORM")
				Me.OnID_FORMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORDEN", DbType:="Int")>  _
	Public Property ORDEN() As System.Nullable(Of Integer)
		Get
			Return Me._ORDEN
		End Get
		Set
			If (Me._ORDEN.Equals(value) = false) Then
				Me.OnORDENChanging(value)
				Me.SendPropertyChanging
				Me._ORDEN = value
				Me.SendPropertyChanged("ORDEN")
				Me.OnORDENChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="GEN_OPCION_MENU_GEN_MENU_PERFIL", Storage:="_GEN_MENU_PERFIL", ThisKey:="ID", OtherKey:="ID_OPC_MENU")>  _
	Public Property GEN_MENU_PERFIL() As EntitySet(Of GEN_MENU_PERFIL)
		Get
			Return Me._GEN_MENU_PERFIL
		End Get
		Set
			Me._GEN_MENU_PERFIL.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="GEN_MENU_GEN_OPCION_MENU", Storage:="_GEN_MENU", ThisKey:="ID_MENU", OtherKey:="ID", IsForeignKey:=true)>  _
	Public Property GEN_MENU() As GEN_MENU
		Get
			Return Me._GEN_MENU.Entity
		End Get
		Set
			Dim previousValue As GEN_MENU = Me._GEN_MENU.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._GEN_MENU.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._GEN_MENU.Entity = Nothing
					previousValue.GEN_OPCION_MENU.Remove(Me)
				End If
				Me._GEN_MENU.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.GEN_OPCION_MENU.Add(Me)
					Me._ID_MENU = value.ID
				Else
					Me._ID_MENU = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("GEN_MENU")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="GEN_FORMULARIO_GEN_OPCION_MENU", Storage:="_GEN_FORMULARIO", ThisKey:="ID_FORM", OtherKey:="ID", IsForeignKey:=true)>  _
	Public Property GEN_FORMULARIO() As GEN_FORMULARIO
		Get
			Return Me._GEN_FORMULARIO.Entity
		End Get
		Set
			Dim previousValue As GEN_FORMULARIO = Me._GEN_FORMULARIO.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._GEN_FORMULARIO.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._GEN_FORMULARIO.Entity = Nothing
					previousValue.GEN_OPCION_MENU.Remove(Me)
				End If
				Me._GEN_FORMULARIO.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.GEN_OPCION_MENU.Add(Me)
					Me._ID_FORM = value.ID
				Else
					Me._ID_FORM = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("GEN_FORMULARIO")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_GEN_MENU_PERFIL(ByVal entity As GEN_MENU_PERFIL)
		Me.SendPropertyChanging
		entity.GEN_OPCION_MENU = Me
	End Sub
	
	Private Sub detach_GEN_MENU_PERFIL(ByVal entity As GEN_MENU_PERFIL)
		Me.SendPropertyChanging
		entity.GEN_OPCION_MENU = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.GEN_MENU")>  _
Partial Public Class GEN_MENU
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _COD_MENU As String
	
	Private _GEN_OPCION_MENU As EntitySet(Of GEN_OPCION_MENU)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnCOD_MENUChanging(value As String)
    End Sub
    Partial Private Sub OnCOD_MENUChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._GEN_OPCION_MENU = New EntitySet(Of GEN_OPCION_MENU)(AddressOf Me.attach_GEN_OPCION_MENU, AddressOf Me.detach_GEN_OPCION_MENU)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COD_MENU", DbType:="VarChar(50)")>  _
	Public Property COD_MENU() As String
		Get
			Return Me._COD_MENU
		End Get
		Set
			If (String.Equals(Me._COD_MENU, value) = false) Then
				Me.OnCOD_MENUChanging(value)
				Me.SendPropertyChanging
				Me._COD_MENU = value
				Me.SendPropertyChanged("COD_MENU")
				Me.OnCOD_MENUChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="GEN_MENU_GEN_OPCION_MENU", Storage:="_GEN_OPCION_MENU", ThisKey:="ID", OtherKey:="ID_MENU")>  _
	Public Property GEN_OPCION_MENU() As EntitySet(Of GEN_OPCION_MENU)
		Get
			Return Me._GEN_OPCION_MENU
		End Get
		Set
			Me._GEN_OPCION_MENU.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_GEN_OPCION_MENU(ByVal entity As GEN_OPCION_MENU)
		Me.SendPropertyChanging
		entity.GEN_MENU = Me
	End Sub
	
	Private Sub detach_GEN_OPCION_MENU(ByVal entity As GEN_OPCION_MENU)
		Me.SendPropertyChanging
		entity.GEN_MENU = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_GEN_MENU_PERFIL")>  _
Partial Public Class V_GEN_MENU_PERFIL
	
	Private _COD_MENU As String
	
	Private _ID As Integer
	
	Private _ID_PERFIL As Integer
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COD_MENU", DbType:="VarChar(50)")>  _
	Public Property COD_MENU() As String
		Get
			Return Me._COD_MENU
		End Get
		Set
			If (String.Equals(Me._COD_MENU, value) = false) Then
				Me._COD_MENU = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", DbType:="Int NOT NULL")>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me._ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID_PERFIL", DbType:="Int NOT NULL")>  _
	Public Property ID_PERFIL() As Integer
		Get
			Return Me._ID_PERFIL
		End Get
		Set
			If ((Me._ID_PERFIL = value)  _
						= false) Then
				Me._ID_PERFIL = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.GEN_CONFIG")>  _
Partial Public Class GEN_CONFIG
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _COD_TIPO_SYM_BAR As System.Nullable(Of Integer)
	
	Private _COD_TIPO_SYM_BAR_INNER As System.Nullable(Of Integer)
	
	Private _COD_TIPO_SYM_BAR_MASTER As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnCOD_TIPO_SYM_BARChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCOD_TIPO_SYM_BARChanged()
    End Sub
    Partial Private Sub OnCOD_TIPO_SYM_BAR_INNERChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCOD_TIPO_SYM_BAR_INNERChanged()
    End Sub
    Partial Private Sub OnCOD_TIPO_SYM_BAR_MASTERChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCOD_TIPO_SYM_BAR_MASTERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COD_TIPO_SYM_BAR", DbType:="Int")>  _
	Public Property COD_TIPO_SYM_BAR() As System.Nullable(Of Integer)
		Get
			Return Me._COD_TIPO_SYM_BAR
		End Get
		Set
			If (Me._COD_TIPO_SYM_BAR.Equals(value) = false) Then
				Me.OnCOD_TIPO_SYM_BARChanging(value)
				Me.SendPropertyChanging
				Me._COD_TIPO_SYM_BAR = value
				Me.SendPropertyChanged("COD_TIPO_SYM_BAR")
				Me.OnCOD_TIPO_SYM_BARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COD_TIPO_SYM_BAR_INNER", DbType:="Int")>  _
	Public Property COD_TIPO_SYM_BAR_INNER() As System.Nullable(Of Integer)
		Get
			Return Me._COD_TIPO_SYM_BAR_INNER
		End Get
		Set
			If (Me._COD_TIPO_SYM_BAR_INNER.Equals(value) = false) Then
				Me.OnCOD_TIPO_SYM_BAR_INNERChanging(value)
				Me.SendPropertyChanging
				Me._COD_TIPO_SYM_BAR_INNER = value
				Me.SendPropertyChanged("COD_TIPO_SYM_BAR_INNER")
				Me.OnCOD_TIPO_SYM_BAR_INNERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COD_TIPO_SYM_BAR_MASTER", DbType:="Int")>  _
	Public Property COD_TIPO_SYM_BAR_MASTER() As System.Nullable(Of Integer)
		Get
			Return Me._COD_TIPO_SYM_BAR_MASTER
		End Get
		Set
			If (Me._COD_TIPO_SYM_BAR_MASTER.Equals(value) = false) Then
				Me.OnCOD_TIPO_SYM_BAR_MASTERChanging(value)
				Me.SendPropertyChanging
				Me._COD_TIPO_SYM_BAR_MASTER = value
				Me.SendPropertyChanged("COD_TIPO_SYM_BAR_MASTER")
				Me.OnCOD_TIPO_SYM_BAR_MASTERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.GEN_HIST_PASS")>  _
Partial Public Class GEN_HIST_PASS
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _ID_USUARIO As System.Nullable(Of Integer)
	
	Private _CD_PASSWORD As String
	
	Private _FECHA_HIST As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnID_USUARIOChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnID_USUARIOChanged()
    End Sub
    Partial Private Sub OnCD_PASSWORDChanging(value As String)
    End Sub
    Partial Private Sub OnCD_PASSWORDChanged()
    End Sub
    Partial Private Sub OnFECHA_HISTChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFECHA_HISTChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID_USUARIO", DbType:="Int")>  _
	Public Property ID_USUARIO() As System.Nullable(Of Integer)
		Get
			Return Me._ID_USUARIO
		End Get
		Set
			If (Me._ID_USUARIO.Equals(value) = false) Then
				Me.OnID_USUARIOChanging(value)
				Me.SendPropertyChanging
				Me._ID_USUARIO = value
				Me.SendPropertyChanged("ID_USUARIO")
				Me.OnID_USUARIOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CD_PASSWORD", DbType:="VarChar(50)")>  _
	Public Property CD_PASSWORD() As String
		Get
			Return Me._CD_PASSWORD
		End Get
		Set
			If (String.Equals(Me._CD_PASSWORD, value) = false) Then
				Me.OnCD_PASSWORDChanging(value)
				Me.SendPropertyChanging
				Me._CD_PASSWORD = value
				Me.SendPropertyChanged("CD_PASSWORD")
				Me.OnCD_PASSWORDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FECHA_HIST", DbType:="DateTime")>  _
	Public Property FECHA_HIST() As System.Nullable(Of Date)
		Get
			Return Me._FECHA_HIST
		End Get
		Set
			If (Me._FECHA_HIST.Equals(value) = false) Then
				Me.OnFECHA_HISTChanging(value)
				Me.SendPropertyChanging
				Me._FECHA_HIST = value
				Me.SendPropertyChanged("FECHA_HIST")
				Me.OnFECHA_HISTChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.GEN_PERFIL_ANDROID")>  _
Partial Public Class GEN_PERFIL_ANDROID
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _DS_NOMBRE_PERFIL As String
	
	Private _GEN_USUARIO As EntitySet(Of GEN_USUARIO)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnDS_NOMBRE_PERFILChanging(value As String)
    End Sub
    Partial Private Sub OnDS_NOMBRE_PERFILChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._GEN_USUARIO = New EntitySet(Of GEN_USUARIO)(AddressOf Me.attach_GEN_USUARIO, AddressOf Me.detach_GEN_USUARIO)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DS_NOMBRE_PERFIL", DbType:="VarChar(100)")>  _
	Public Property DS_NOMBRE_PERFIL() As String
		Get
			Return Me._DS_NOMBRE_PERFIL
		End Get
		Set
			If (String.Equals(Me._DS_NOMBRE_PERFIL, value) = false) Then
				Me.OnDS_NOMBRE_PERFILChanging(value)
				Me.SendPropertyChanging
				Me._DS_NOMBRE_PERFIL = value
				Me.SendPropertyChanged("DS_NOMBRE_PERFIL")
				Me.OnDS_NOMBRE_PERFILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="GEN_PERFIL_ANDROID_GEN_USUARIO", Storage:="_GEN_USUARIO", ThisKey:="ID", OtherKey:="ID_PERFIL_ANDROID")>  _
	Public Property GEN_USUARIO() As EntitySet(Of GEN_USUARIO)
		Get
			Return Me._GEN_USUARIO
		End Get
		Set
			Me._GEN_USUARIO.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_GEN_USUARIO(ByVal entity As GEN_USUARIO)
		Me.SendPropertyChanging
		entity.GEN_PERFIL_ANDROID = Me
	End Sub
	
	Private Sub detach_GEN_USUARIO(ByVal entity As GEN_USUARIO)
		Me.SendPropertyChanging
		entity.GEN_PERFIL_ANDROID = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.GEN_USUARIO")>  _
Partial Public Class GEN_USUARIO
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _CD_LOGIN As String
	
	Private _CD_PASSWORD As String
	
	Private _DESC_NOMBRE_USUARIO As String
	
	Private _ID_PERFIL As System.Nullable(Of Integer)
	
	Private _ID_PERFIL_ANDROID As System.Nullable(Of Integer)
	
	Private _CD_ESTADO As System.Nullable(Of Char)
	
	Private _CD_BAR_CODE As String
	
	Private _CD_CORREO_E As String
	
	Private _GEN_PERFIL_ANDROID As EntityRef(Of GEN_PERFIL_ANDROID)
	
	Private _GEN_PERFIL As EntityRef(Of GEN_PERFIL)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnCD_LOGINChanging(value As String)
    End Sub
    Partial Private Sub OnCD_LOGINChanged()
    End Sub
    Partial Private Sub OnCD_PASSWORDChanging(value As String)
    End Sub
    Partial Private Sub OnCD_PASSWORDChanged()
    End Sub
    Partial Private Sub OnDESC_NOMBRE_USUARIOChanging(value As String)
    End Sub
    Partial Private Sub OnDESC_NOMBRE_USUARIOChanged()
    End Sub
    Partial Private Sub OnID_PERFILChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnID_PERFILChanged()
    End Sub
    Partial Private Sub OnID_PERFIL_ANDROIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnID_PERFIL_ANDROIDChanged()
    End Sub
    Partial Private Sub OnCD_ESTADOChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnCD_ESTADOChanged()
    End Sub
    Partial Private Sub OnCD_BAR_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnCD_BAR_CODEChanged()
    End Sub
    Partial Private Sub OnCD_CORREO_EChanging(value As String)
    End Sub
    Partial Private Sub OnCD_CORREO_EChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._GEN_PERFIL_ANDROID = CType(Nothing, EntityRef(Of GEN_PERFIL_ANDROID))
		Me._GEN_PERFIL = CType(Nothing, EntityRef(Of GEN_PERFIL))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CD_LOGIN", DbType:="VarChar(50)")>  _
	Public Property CD_LOGIN() As String
		Get
			Return Me._CD_LOGIN
		End Get
		Set
			If (String.Equals(Me._CD_LOGIN, value) = false) Then
				Me.OnCD_LOGINChanging(value)
				Me.SendPropertyChanging
				Me._CD_LOGIN = value
				Me.SendPropertyChanged("CD_LOGIN")
				Me.OnCD_LOGINChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CD_PASSWORD", DbType:="VarChar(50)")>  _
	Public Property CD_PASSWORD() As String
		Get
			Return Me._CD_PASSWORD
		End Get
		Set
			If (String.Equals(Me._CD_PASSWORD, value) = false) Then
				Me.OnCD_PASSWORDChanging(value)
				Me.SendPropertyChanging
				Me._CD_PASSWORD = value
				Me.SendPropertyChanged("CD_PASSWORD")
				Me.OnCD_PASSWORDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESC_NOMBRE_USUARIO", DbType:="VarChar(100)")>  _
	Public Property DESC_NOMBRE_USUARIO() As String
		Get
			Return Me._DESC_NOMBRE_USUARIO
		End Get
		Set
			If (String.Equals(Me._DESC_NOMBRE_USUARIO, value) = false) Then
				Me.OnDESC_NOMBRE_USUARIOChanging(value)
				Me.SendPropertyChanging
				Me._DESC_NOMBRE_USUARIO = value
				Me.SendPropertyChanged("DESC_NOMBRE_USUARIO")
				Me.OnDESC_NOMBRE_USUARIOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID_PERFIL", DbType:="Int")>  _
	Public Property ID_PERFIL() As System.Nullable(Of Integer)
		Get
			Return Me._ID_PERFIL
		End Get
		Set
			If (Me._ID_PERFIL.Equals(value) = false) Then
				If Me._GEN_PERFIL.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnID_PERFILChanging(value)
				Me.SendPropertyChanging
				Me._ID_PERFIL = value
				Me.SendPropertyChanged("ID_PERFIL")
				Me.OnID_PERFILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID_PERFIL_ANDROID", DbType:="Int")>  _
	Public Property ID_PERFIL_ANDROID() As System.Nullable(Of Integer)
		Get
			Return Me._ID_PERFIL_ANDROID
		End Get
		Set
			If (Me._ID_PERFIL_ANDROID.Equals(value) = false) Then
				If Me._GEN_PERFIL_ANDROID.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnID_PERFIL_ANDROIDChanging(value)
				Me.SendPropertyChanging
				Me._ID_PERFIL_ANDROID = value
				Me.SendPropertyChanged("ID_PERFIL_ANDROID")
				Me.OnID_PERFIL_ANDROIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CD_ESTADO", DbType:="Char(1)")>  _
	Public Property CD_ESTADO() As System.Nullable(Of Char)
		Get
			Return Me._CD_ESTADO
		End Get
		Set
			If (Me._CD_ESTADO.Equals(value) = false) Then
				Me.OnCD_ESTADOChanging(value)
				Me.SendPropertyChanging
				Me._CD_ESTADO = value
				Me.SendPropertyChanged("CD_ESTADO")
				Me.OnCD_ESTADOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CD_BAR_CODE", DbType:="VarChar(50)")>  _
	Public Property CD_BAR_CODE() As String
		Get
			Return Me._CD_BAR_CODE
		End Get
		Set
			If (String.Equals(Me._CD_BAR_CODE, value) = false) Then
				Me.OnCD_BAR_CODEChanging(value)
				Me.SendPropertyChanging
				Me._CD_BAR_CODE = value
				Me.SendPropertyChanged("CD_BAR_CODE")
				Me.OnCD_BAR_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CD_CORREO_E", DbType:="VarChar(100)")>  _
	Public Property CD_CORREO_E() As String
		Get
			Return Me._CD_CORREO_E
		End Get
		Set
			If (String.Equals(Me._CD_CORREO_E, value) = false) Then
				Me.OnCD_CORREO_EChanging(value)
				Me.SendPropertyChanging
				Me._CD_CORREO_E = value
				Me.SendPropertyChanged("CD_CORREO_E")
				Me.OnCD_CORREO_EChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="GEN_PERFIL_ANDROID_GEN_USUARIO", Storage:="_GEN_PERFIL_ANDROID", ThisKey:="ID_PERFIL_ANDROID", OtherKey:="ID", IsForeignKey:=true)>  _
	Public Property GEN_PERFIL_ANDROID() As GEN_PERFIL_ANDROID
		Get
			Return Me._GEN_PERFIL_ANDROID.Entity
		End Get
		Set
			Dim previousValue As GEN_PERFIL_ANDROID = Me._GEN_PERFIL_ANDROID.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._GEN_PERFIL_ANDROID.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._GEN_PERFIL_ANDROID.Entity = Nothing
					previousValue.GEN_USUARIO.Remove(Me)
				End If
				Me._GEN_PERFIL_ANDROID.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.GEN_USUARIO.Add(Me)
					Me._ID_PERFIL_ANDROID = value.ID
				Else
					Me._ID_PERFIL_ANDROID = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("GEN_PERFIL_ANDROID")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="GEN_PERFIL_GEN_USUARIO", Storage:="_GEN_PERFIL", ThisKey:="ID_PERFIL", OtherKey:="ID", IsForeignKey:=true)>  _
	Public Property GEN_PERFIL() As GEN_PERFIL
		Get
			Return Me._GEN_PERFIL.Entity
		End Get
		Set
			Dim previousValue As GEN_PERFIL = Me._GEN_PERFIL.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._GEN_PERFIL.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._GEN_PERFIL.Entity = Nothing
					previousValue.GEN_USUARIO.Remove(Me)
				End If
				Me._GEN_PERFIL.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.GEN_USUARIO.Add(Me)
					Me._ID_PERFIL = value.ID
				Else
					Me._ID_PERFIL = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("GEN_PERFIL")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_GEN_USUARIO")>  _
Partial Public Class V_GEN_USUARIO
	
	Private _ID As Integer
	
	Private _CD_LOGIN As String
	
	Private _CD_PASSWORD As String
	
	Private _DESC_NOMBRE_USUARIO As String
	
	Private _ID_PERFIL As System.Nullable(Of Integer)
	
	Private _ID_PERFIL_ANDROID As System.Nullable(Of Integer)
	
	Private _CD_ESTADO As System.Nullable(Of Char)
	
	Private _CD_BAR_CODE As String
	
	Private _CD_CORREO_E As String
	
	Private _DS_NOMBRE_PERFIL_ANDROID As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", DbType:="Int NOT NULL")>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me._ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CD_LOGIN", DbType:="VarChar(50)")>  _
	Public Property CD_LOGIN() As String
		Get
			Return Me._CD_LOGIN
		End Get
		Set
			If (String.Equals(Me._CD_LOGIN, value) = false) Then
				Me._CD_LOGIN = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CD_PASSWORD", DbType:="VarChar(50)")>  _
	Public Property CD_PASSWORD() As String
		Get
			Return Me._CD_PASSWORD
		End Get
		Set
			If (String.Equals(Me._CD_PASSWORD, value) = false) Then
				Me._CD_PASSWORD = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESC_NOMBRE_USUARIO", DbType:="VarChar(100)")>  _
	Public Property DESC_NOMBRE_USUARIO() As String
		Get
			Return Me._DESC_NOMBRE_USUARIO
		End Get
		Set
			If (String.Equals(Me._DESC_NOMBRE_USUARIO, value) = false) Then
				Me._DESC_NOMBRE_USUARIO = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID_PERFIL", DbType:="Int")>  _
	Public Property ID_PERFIL() As System.Nullable(Of Integer)
		Get
			Return Me._ID_PERFIL
		End Get
		Set
			If (Me._ID_PERFIL.Equals(value) = false) Then
				Me._ID_PERFIL = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID_PERFIL_ANDROID", DbType:="Int")>  _
	Public Property ID_PERFIL_ANDROID() As System.Nullable(Of Integer)
		Get
			Return Me._ID_PERFIL_ANDROID
		End Get
		Set
			If (Me._ID_PERFIL_ANDROID.Equals(value) = false) Then
				Me._ID_PERFIL_ANDROID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CD_ESTADO", DbType:="Char(1)")>  _
	Public Property CD_ESTADO() As System.Nullable(Of Char)
		Get
			Return Me._CD_ESTADO
		End Get
		Set
			If (Me._CD_ESTADO.Equals(value) = false) Then
				Me._CD_ESTADO = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CD_BAR_CODE", DbType:="VarChar(50)")>  _
	Public Property CD_BAR_CODE() As String
		Get
			Return Me._CD_BAR_CODE
		End Get
		Set
			If (String.Equals(Me._CD_BAR_CODE, value) = false) Then
				Me._CD_BAR_CODE = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CD_CORREO_E", DbType:="VarChar(100)")>  _
	Public Property CD_CORREO_E() As String
		Get
			Return Me._CD_CORREO_E
		End Get
		Set
			If (String.Equals(Me._CD_CORREO_E, value) = false) Then
				Me._CD_CORREO_E = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DS_NOMBRE_PERFIL_ANDROID", DbType:="VarChar(100)")>  _
	Public Property DS_NOMBRE_PERFIL_ANDROID() As String
		Get
			Return Me._DS_NOMBRE_PERFIL_ANDROID
		End Get
		Set
			If (String.Equals(Me._DS_NOMBRE_PERFIL_ANDROID, value) = false) Then
				Me._DS_NOMBRE_PERFIL_ANDROID = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.GEN_PERFIL")>  _
Partial Public Class GEN_PERFIL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _DS_NOMBRE_PERFIL As String
	
	Private _CD_NIVEL_ACCESO As System.Nullable(Of Char)
	
	Private _FLG_NOTI_PROD As System.Nullable(Of Char)
	
	Private _FLG_NOTI_PROD_CDI As System.Nullable(Of Char)
	
	Private _GEN_MENU_PERFIL As EntitySet(Of GEN_MENU_PERFIL)
	
	Private _GEN_USUARIO As EntitySet(Of GEN_USUARIO)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnDS_NOMBRE_PERFILChanging(value As String)
    End Sub
    Partial Private Sub OnDS_NOMBRE_PERFILChanged()
    End Sub
    Partial Private Sub OnCD_NIVEL_ACCESOChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnCD_NIVEL_ACCESOChanged()
    End Sub
    Partial Private Sub OnFLG_NOTI_PRODChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnFLG_NOTI_PRODChanged()
    End Sub
    Partial Private Sub OnFLG_NOTI_PROD_CDIChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnFLG_NOTI_PROD_CDIChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._GEN_MENU_PERFIL = New EntitySet(Of GEN_MENU_PERFIL)(AddressOf Me.attach_GEN_MENU_PERFIL, AddressOf Me.detach_GEN_MENU_PERFIL)
		Me._GEN_USUARIO = New EntitySet(Of GEN_USUARIO)(AddressOf Me.attach_GEN_USUARIO, AddressOf Me.detach_GEN_USUARIO)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DS_NOMBRE_PERFIL", DbType:="VarChar(100)")>  _
	Public Property DS_NOMBRE_PERFIL() As String
		Get
			Return Me._DS_NOMBRE_PERFIL
		End Get
		Set
			If (String.Equals(Me._DS_NOMBRE_PERFIL, value) = false) Then
				Me.OnDS_NOMBRE_PERFILChanging(value)
				Me.SendPropertyChanging
				Me._DS_NOMBRE_PERFIL = value
				Me.SendPropertyChanged("DS_NOMBRE_PERFIL")
				Me.OnDS_NOMBRE_PERFILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CD_NIVEL_ACCESO", DbType:="Char(1)")>  _
	Public Property CD_NIVEL_ACCESO() As System.Nullable(Of Char)
		Get
			Return Me._CD_NIVEL_ACCESO
		End Get
		Set
			If (Me._CD_NIVEL_ACCESO.Equals(value) = false) Then
				Me.OnCD_NIVEL_ACCESOChanging(value)
				Me.SendPropertyChanging
				Me._CD_NIVEL_ACCESO = value
				Me.SendPropertyChanged("CD_NIVEL_ACCESO")
				Me.OnCD_NIVEL_ACCESOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FLG_NOTI_PROD", DbType:="Char(1)")>  _
	Public Property FLG_NOTI_PROD() As System.Nullable(Of Char)
		Get
			Return Me._FLG_NOTI_PROD
		End Get
		Set
			If (Me._FLG_NOTI_PROD.Equals(value) = false) Then
				Me.OnFLG_NOTI_PRODChanging(value)
				Me.SendPropertyChanging
				Me._FLG_NOTI_PROD = value
				Me.SendPropertyChanged("FLG_NOTI_PROD")
				Me.OnFLG_NOTI_PRODChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FLG_NOTI_PROD_CDI", DbType:="Char(1)")>  _
	Public Property FLG_NOTI_PROD_CDI() As System.Nullable(Of Char)
		Get
			Return Me._FLG_NOTI_PROD_CDI
		End Get
		Set
			If (Me._FLG_NOTI_PROD_CDI.Equals(value) = false) Then
				Me.OnFLG_NOTI_PROD_CDIChanging(value)
				Me.SendPropertyChanging
				Me._FLG_NOTI_PROD_CDI = value
				Me.SendPropertyChanged("FLG_NOTI_PROD_CDI")
				Me.OnFLG_NOTI_PROD_CDIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="GEN_PERFIL_GEN_MENU_PERFIL", Storage:="_GEN_MENU_PERFIL", ThisKey:="ID", OtherKey:="ID_PERFIL")>  _
	Public Property GEN_MENU_PERFIL() As EntitySet(Of GEN_MENU_PERFIL)
		Get
			Return Me._GEN_MENU_PERFIL
		End Get
		Set
			Me._GEN_MENU_PERFIL.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="GEN_PERFIL_GEN_USUARIO", Storage:="_GEN_USUARIO", ThisKey:="ID", OtherKey:="ID_PERFIL")>  _
	Public Property GEN_USUARIO() As EntitySet(Of GEN_USUARIO)
		Get
			Return Me._GEN_USUARIO
		End Get
		Set
			Me._GEN_USUARIO.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_GEN_MENU_PERFIL(ByVal entity As GEN_MENU_PERFIL)
		Me.SendPropertyChanging
		entity.GEN_PERFIL = Me
	End Sub
	
	Private Sub detach_GEN_MENU_PERFIL(ByVal entity As GEN_MENU_PERFIL)
		Me.SendPropertyChanging
		entity.GEN_PERFIL = Nothing
	End Sub
	
	Private Sub attach_GEN_USUARIO(ByVal entity As GEN_USUARIO)
		Me.SendPropertyChanging
		entity.GEN_PERFIL = Me
	End Sub
	
	Private Sub detach_GEN_USUARIO(ByVal entity As GEN_USUARIO)
		Me.SendPropertyChanging
		entity.GEN_PERFIL = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_GEN_FORMULARIO")>  _
Partial Public Class V_GEN_FORMULARIO
	
	Private _ID As Integer
	
	Private _COD_FORM As String
	
	Private _DS_NOMBRE_FORM As String
	
	Private _DS_NOMBRE_CORTO As String
	
	Private _ID_MODULO As System.Nullable(Of Integer)
	
	Private _DS_NOMBRE_MODULO As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", DbType:="Int NOT NULL")>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me._ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COD_FORM", DbType:="VarChar(50)")>  _
	Public Property COD_FORM() As String
		Get
			Return Me._COD_FORM
		End Get
		Set
			If (String.Equals(Me._COD_FORM, value) = false) Then
				Me._COD_FORM = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DS_NOMBRE_FORM", DbType:="VarChar(50)")>  _
	Public Property DS_NOMBRE_FORM() As String
		Get
			Return Me._DS_NOMBRE_FORM
		End Get
		Set
			If (String.Equals(Me._DS_NOMBRE_FORM, value) = false) Then
				Me._DS_NOMBRE_FORM = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DS_NOMBRE_CORTO", DbType:="VarChar(25)")>  _
	Public Property DS_NOMBRE_CORTO() As String
		Get
			Return Me._DS_NOMBRE_CORTO
		End Get
		Set
			If (String.Equals(Me._DS_NOMBRE_CORTO, value) = false) Then
				Me._DS_NOMBRE_CORTO = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID_MODULO", DbType:="Int")>  _
	Public Property ID_MODULO() As System.Nullable(Of Integer)
		Get
			Return Me._ID_MODULO
		End Get
		Set
			If (Me._ID_MODULO.Equals(value) = false) Then
				Me._ID_MODULO = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DS_NOMBRE_MODULO", DbType:="VarChar(100)")>  _
	Public Property DS_NOMBRE_MODULO() As String
		Get
			Return Me._DS_NOMBRE_MODULO
		End Get
		Set
			If (String.Equals(Me._DS_NOMBRE_MODULO, value) = false) Then
				Me._DS_NOMBRE_MODULO = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_GEN_OPCION_MENU")>  _
Partial Public Class V_GEN_OPCION_MENU
	
	Private _ID As Integer
	
	Private _ORDEN As System.Nullable(Of Integer)
	
	Private _COD_MENU As String
	
	Private _COD_FORM As String
	
	Private _DS_NOMBRE_FORM As String
	
	Private _DS_NOMBRE_CORTO As String
	
	Private _ID_MENU As Integer
	
	Private _ID_FORM As Integer
	
	Private _DS_NOMBRE_MODULO As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", DbType:="Int NOT NULL")>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me._ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORDEN", DbType:="Int")>  _
	Public Property ORDEN() As System.Nullable(Of Integer)
		Get
			Return Me._ORDEN
		End Get
		Set
			If (Me._ORDEN.Equals(value) = false) Then
				Me._ORDEN = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COD_MENU", DbType:="VarChar(50)")>  _
	Public Property COD_MENU() As String
		Get
			Return Me._COD_MENU
		End Get
		Set
			If (String.Equals(Me._COD_MENU, value) = false) Then
				Me._COD_MENU = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COD_FORM", DbType:="VarChar(50)")>  _
	Public Property COD_FORM() As String
		Get
			Return Me._COD_FORM
		End Get
		Set
			If (String.Equals(Me._COD_FORM, value) = false) Then
				Me._COD_FORM = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DS_NOMBRE_FORM", DbType:="VarChar(50)")>  _
	Public Property DS_NOMBRE_FORM() As String
		Get
			Return Me._DS_NOMBRE_FORM
		End Get
		Set
			If (String.Equals(Me._DS_NOMBRE_FORM, value) = false) Then
				Me._DS_NOMBRE_FORM = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DS_NOMBRE_CORTO", DbType:="VarChar(25)")>  _
	Public Property DS_NOMBRE_CORTO() As String
		Get
			Return Me._DS_NOMBRE_CORTO
		End Get
		Set
			If (String.Equals(Me._DS_NOMBRE_CORTO, value) = false) Then
				Me._DS_NOMBRE_CORTO = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID_MENU", DbType:="Int NOT NULL")>  _
	Public Property ID_MENU() As Integer
		Get
			Return Me._ID_MENU
		End Get
		Set
			If ((Me._ID_MENU = value)  _
						= false) Then
				Me._ID_MENU = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID_FORM", DbType:="Int NOT NULL")>  _
	Public Property ID_FORM() As Integer
		Get
			Return Me._ID_FORM
		End Get
		Set
			If ((Me._ID_FORM = value)  _
						= false) Then
				Me._ID_FORM = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DS_NOMBRE_MODULO", DbType:="VarChar(100)")>  _
	Public Property DS_NOMBRE_MODULO() As String
		Get
			Return Me._DS_NOMBRE_MODULO
		End Get
		Set
			If (String.Equals(Me._DS_NOMBRE_MODULO, value) = false) Then
				Me._DS_NOMBRE_MODULO = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.GEN_MODULO")>  _
Partial Public Class GEN_MODULO
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _DS_NOMBRE_MODULO As String
	
	Private _CD_IMAGEN As System.Nullable(Of Integer)
	
	Private _GEN_FORMULARIO As EntitySet(Of GEN_FORMULARIO)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnDS_NOMBRE_MODULOChanging(value As String)
    End Sub
    Partial Private Sub OnDS_NOMBRE_MODULOChanged()
    End Sub
    Partial Private Sub OnCD_IMAGENChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCD_IMAGENChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._GEN_FORMULARIO = New EntitySet(Of GEN_FORMULARIO)(AddressOf Me.attach_GEN_FORMULARIO, AddressOf Me.detach_GEN_FORMULARIO)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DS_NOMBRE_MODULO", DbType:="VarChar(100)")>  _
	Public Property DS_NOMBRE_MODULO() As String
		Get
			Return Me._DS_NOMBRE_MODULO
		End Get
		Set
			If (String.Equals(Me._DS_NOMBRE_MODULO, value) = false) Then
				Me.OnDS_NOMBRE_MODULOChanging(value)
				Me.SendPropertyChanging
				Me._DS_NOMBRE_MODULO = value
				Me.SendPropertyChanged("DS_NOMBRE_MODULO")
				Me.OnDS_NOMBRE_MODULOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CD_IMAGEN", DbType:="Int")>  _
	Public Property CD_IMAGEN() As System.Nullable(Of Integer)
		Get
			Return Me._CD_IMAGEN
		End Get
		Set
			If (Me._CD_IMAGEN.Equals(value) = false) Then
				Me.OnCD_IMAGENChanging(value)
				Me.SendPropertyChanging
				Me._CD_IMAGEN = value
				Me.SendPropertyChanged("CD_IMAGEN")
				Me.OnCD_IMAGENChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="GEN_MODULO_GEN_FORMULARIO", Storage:="_GEN_FORMULARIO", ThisKey:="ID", OtherKey:="ID_MODULO")>  _
	Public Property GEN_FORMULARIO() As EntitySet(Of GEN_FORMULARIO)
		Get
			Return Me._GEN_FORMULARIO
		End Get
		Set
			Me._GEN_FORMULARIO.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_GEN_FORMULARIO(ByVal entity As GEN_FORMULARIO)
		Me.SendPropertyChanging
		entity.GEN_MODULO = Me
	End Sub
	
	Private Sub detach_GEN_FORMULARIO(ByVal entity As GEN_FORMULARIO)
		Me.SendPropertyChanging
		entity.GEN_MODULO = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.GEN_FORMULARIO")>  _
Partial Public Class GEN_FORMULARIO
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _COD_FORM As String
	
	Private _DS_NOMBRE_FORM As String
	
	Private _DS_NOMBRE_CORTO As String
	
	Private _ID_MODULO As System.Nullable(Of Integer)
	
	Private _GEN_OPCION_MENU As EntitySet(Of GEN_OPCION_MENU)
	
	Private _GEN_MODULO As EntityRef(Of GEN_MODULO)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnCOD_FORMChanging(value As String)
    End Sub
    Partial Private Sub OnCOD_FORMChanged()
    End Sub
    Partial Private Sub OnDS_NOMBRE_FORMChanging(value As String)
    End Sub
    Partial Private Sub OnDS_NOMBRE_FORMChanged()
    End Sub
    Partial Private Sub OnDS_NOMBRE_CORTOChanging(value As String)
    End Sub
    Partial Private Sub OnDS_NOMBRE_CORTOChanged()
    End Sub
    Partial Private Sub OnID_MODULOChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnID_MODULOChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._GEN_OPCION_MENU = New EntitySet(Of GEN_OPCION_MENU)(AddressOf Me.attach_GEN_OPCION_MENU, AddressOf Me.detach_GEN_OPCION_MENU)
		Me._GEN_MODULO = CType(Nothing, EntityRef(Of GEN_MODULO))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COD_FORM", DbType:="VarChar(50)")>  _
	Public Property COD_FORM() As String
		Get
			Return Me._COD_FORM
		End Get
		Set
			If (String.Equals(Me._COD_FORM, value) = false) Then
				Me.OnCOD_FORMChanging(value)
				Me.SendPropertyChanging
				Me._COD_FORM = value
				Me.SendPropertyChanged("COD_FORM")
				Me.OnCOD_FORMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DS_NOMBRE_FORM", DbType:="VarChar(50)")>  _
	Public Property DS_NOMBRE_FORM() As String
		Get
			Return Me._DS_NOMBRE_FORM
		End Get
		Set
			If (String.Equals(Me._DS_NOMBRE_FORM, value) = false) Then
				Me.OnDS_NOMBRE_FORMChanging(value)
				Me.SendPropertyChanging
				Me._DS_NOMBRE_FORM = value
				Me.SendPropertyChanged("DS_NOMBRE_FORM")
				Me.OnDS_NOMBRE_FORMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DS_NOMBRE_CORTO", DbType:="VarChar(25)")>  _
	Public Property DS_NOMBRE_CORTO() As String
		Get
			Return Me._DS_NOMBRE_CORTO
		End Get
		Set
			If (String.Equals(Me._DS_NOMBRE_CORTO, value) = false) Then
				Me.OnDS_NOMBRE_CORTOChanging(value)
				Me.SendPropertyChanging
				Me._DS_NOMBRE_CORTO = value
				Me.SendPropertyChanged("DS_NOMBRE_CORTO")
				Me.OnDS_NOMBRE_CORTOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID_MODULO", DbType:="Int")>  _
	Public Property ID_MODULO() As System.Nullable(Of Integer)
		Get
			Return Me._ID_MODULO
		End Get
		Set
			If (Me._ID_MODULO.Equals(value) = false) Then
				If Me._GEN_MODULO.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnID_MODULOChanging(value)
				Me.SendPropertyChanging
				Me._ID_MODULO = value
				Me.SendPropertyChanged("ID_MODULO")
				Me.OnID_MODULOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="GEN_FORMULARIO_GEN_OPCION_MENU", Storage:="_GEN_OPCION_MENU", ThisKey:="ID", OtherKey:="ID_FORM")>  _
	Public Property GEN_OPCION_MENU() As EntitySet(Of GEN_OPCION_MENU)
		Get
			Return Me._GEN_OPCION_MENU
		End Get
		Set
			Me._GEN_OPCION_MENU.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="GEN_MODULO_GEN_FORMULARIO", Storage:="_GEN_MODULO", ThisKey:="ID_MODULO", OtherKey:="ID", IsForeignKey:=true)>  _
	Public Property GEN_MODULO() As GEN_MODULO
		Get
			Return Me._GEN_MODULO.Entity
		End Get
		Set
			Dim previousValue As GEN_MODULO = Me._GEN_MODULO.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._GEN_MODULO.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._GEN_MODULO.Entity = Nothing
					previousValue.GEN_FORMULARIO.Remove(Me)
				End If
				Me._GEN_MODULO.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.GEN_FORMULARIO.Add(Me)
					Me._ID_MODULO = value.ID
				Else
					Me._ID_MODULO = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("GEN_MODULO")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_GEN_OPCION_MENU(ByVal entity As GEN_OPCION_MENU)
		Me.SendPropertyChanging
		entity.GEN_FORMULARIO = Me
	End Sub
	
	Private Sub detach_GEN_OPCION_MENU(ByVal entity As GEN_OPCION_MENU)
		Me.SendPropertyChanging
		entity.GEN_FORMULARIO = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_GEN_MENU_PERFIL_AUX")>  _
Partial Public Class V_GEN_MENU_PERFIL_AUX
	
	Private _ID As Integer
	
	Private _ID_PERFIL As Integer
	
	Private _ID_OPC_MENU As Integer
	
	Private _FLG_LECTURA As System.Nullable(Of Char)
	
	Private _ORDEN As System.Nullable(Of Integer)
	
	Private _COD_FORM As String
	
	Private _DS_NOMBRE_FORM As String
	
	Private _DS_NOMBRE_CORTO As String
	
	Private _COD_MENU As String
	
	Private _ID_MENU As Integer
	
	Private _ID_FORM As Integer
	
	Private _DS_NOMBRE_PERFIL As String
	
	Private _CD_NIVEL_ACCESO As System.Nullable(Of Char)
	
	Private _DS_NOMBRE_MODULO As String
	
	Private _CD_IMAGEN As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", DbType:="Int NOT NULL")>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me._ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID_PERFIL", DbType:="Int NOT NULL")>  _
	Public Property ID_PERFIL() As Integer
		Get
			Return Me._ID_PERFIL
		End Get
		Set
			If ((Me._ID_PERFIL = value)  _
						= false) Then
				Me._ID_PERFIL = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID_OPC_MENU", DbType:="Int NOT NULL")>  _
	Public Property ID_OPC_MENU() As Integer
		Get
			Return Me._ID_OPC_MENU
		End Get
		Set
			If ((Me._ID_OPC_MENU = value)  _
						= false) Then
				Me._ID_OPC_MENU = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FLG_LECTURA", DbType:="Char(1)")>  _
	Public Property FLG_LECTURA() As System.Nullable(Of Char)
		Get
			Return Me._FLG_LECTURA
		End Get
		Set
			If (Me._FLG_LECTURA.Equals(value) = false) Then
				Me._FLG_LECTURA = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORDEN", DbType:="Int")>  _
	Public Property ORDEN() As System.Nullable(Of Integer)
		Get
			Return Me._ORDEN
		End Get
		Set
			If (Me._ORDEN.Equals(value) = false) Then
				Me._ORDEN = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COD_FORM", DbType:="VarChar(50)")>  _
	Public Property COD_FORM() As String
		Get
			Return Me._COD_FORM
		End Get
		Set
			If (String.Equals(Me._COD_FORM, value) = false) Then
				Me._COD_FORM = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DS_NOMBRE_FORM", DbType:="VarChar(50)")>  _
	Public Property DS_NOMBRE_FORM() As String
		Get
			Return Me._DS_NOMBRE_FORM
		End Get
		Set
			If (String.Equals(Me._DS_NOMBRE_FORM, value) = false) Then
				Me._DS_NOMBRE_FORM = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DS_NOMBRE_CORTO", DbType:="VarChar(25)")>  _
	Public Property DS_NOMBRE_CORTO() As String
		Get
			Return Me._DS_NOMBRE_CORTO
		End Get
		Set
			If (String.Equals(Me._DS_NOMBRE_CORTO, value) = false) Then
				Me._DS_NOMBRE_CORTO = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COD_MENU", DbType:="VarChar(50)")>  _
	Public Property COD_MENU() As String
		Get
			Return Me._COD_MENU
		End Get
		Set
			If (String.Equals(Me._COD_MENU, value) = false) Then
				Me._COD_MENU = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID_MENU", DbType:="Int NOT NULL")>  _
	Public Property ID_MENU() As Integer
		Get
			Return Me._ID_MENU
		End Get
		Set
			If ((Me._ID_MENU = value)  _
						= false) Then
				Me._ID_MENU = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID_FORM", DbType:="Int NOT NULL")>  _
	Public Property ID_FORM() As Integer
		Get
			Return Me._ID_FORM
		End Get
		Set
			If ((Me._ID_FORM = value)  _
						= false) Then
				Me._ID_FORM = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DS_NOMBRE_PERFIL", DbType:="VarChar(100)")>  _
	Public Property DS_NOMBRE_PERFIL() As String
		Get
			Return Me._DS_NOMBRE_PERFIL
		End Get
		Set
			If (String.Equals(Me._DS_NOMBRE_PERFIL, value) = false) Then
				Me._DS_NOMBRE_PERFIL = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CD_NIVEL_ACCESO", DbType:="Char(1)")>  _
	Public Property CD_NIVEL_ACCESO() As System.Nullable(Of Char)
		Get
			Return Me._CD_NIVEL_ACCESO
		End Get
		Set
			If (Me._CD_NIVEL_ACCESO.Equals(value) = false) Then
				Me._CD_NIVEL_ACCESO = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DS_NOMBRE_MODULO", DbType:="VarChar(100)")>  _
	Public Property DS_NOMBRE_MODULO() As String
		Get
			Return Me._DS_NOMBRE_MODULO
		End Get
		Set
			If (String.Equals(Me._DS_NOMBRE_MODULO, value) = false) Then
				Me._DS_NOMBRE_MODULO = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CD_IMAGEN", DbType:="Int")>  _
	Public Property CD_IMAGEN() As System.Nullable(Of Integer)
		Get
			Return Me._CD_IMAGEN
		End Get
		Set
			If (Me._CD_IMAGEN.Equals(value) = false) Then
				Me._CD_IMAGEN = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.GEN_PIVOT_LAYOUT")>  _
Partial Public Class GEN_PIVOT_LAYOUT
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _CD_CLAVE As String
	
	Private _DS_LAYOUT As String
	
	Private _DT_LAYOUT As System.Data.Linq.Binary
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnCD_CLAVEChanging(value As String)
    End Sub
    Partial Private Sub OnCD_CLAVEChanged()
    End Sub
    Partial Private Sub OnDS_LAYOUTChanging(value As String)
    End Sub
    Partial Private Sub OnDS_LAYOUTChanged()
    End Sub
    Partial Private Sub OnDT_LAYOUTChanging(value As System.Data.Linq.Binary)
    End Sub
    Partial Private Sub OnDT_LAYOUTChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CD_CLAVE", DbType:="VarChar(50)")>  _
	Public Property CD_CLAVE() As String
		Get
			Return Me._CD_CLAVE
		End Get
		Set
			If (String.Equals(Me._CD_CLAVE, value) = false) Then
				Me.OnCD_CLAVEChanging(value)
				Me.SendPropertyChanging
				Me._CD_CLAVE = value
				Me.SendPropertyChanged("CD_CLAVE")
				Me.OnCD_CLAVEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DS_LAYOUT", DbType:="VarChar(100)")>  _
	Public Property DS_LAYOUT() As String
		Get
			Return Me._DS_LAYOUT
		End Get
		Set
			If (String.Equals(Me._DS_LAYOUT, value) = false) Then
				Me.OnDS_LAYOUTChanging(value)
				Me.SendPropertyChanging
				Me._DS_LAYOUT = value
				Me.SendPropertyChanged("DS_LAYOUT")
				Me.OnDS_LAYOUTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DT_LAYOUT", DbType:="VarBinary(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property DT_LAYOUT() As System.Data.Linq.Binary
		Get
			Return Me._DT_LAYOUT
		End Get
		Set
			If (Object.Equals(Me._DT_LAYOUT, value) = false) Then
				Me.OnDT_LAYOUTChanging(value)
				Me.SendPropertyChanging
				Me._DT_LAYOUT = value
				Me.SendPropertyChanged("DT_LAYOUT")
				Me.OnDT_LAYOUTChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.AUDI_CUEN_MONEDAS")>  _
Partial Public Class AUDI_CUEN_MONEDAS
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _DS_NOM_MODENA As String
	
	Private _DS_SIMBO_MONEDA As String
	
	Private _FACT_CONVERSION As System.Nullable(Of Decimal)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnDS_NOM_MODENAChanging(value As String)
    End Sub
    Partial Private Sub OnDS_NOM_MODENAChanged()
    End Sub
    Partial Private Sub OnDS_SIMBO_MONEDAChanging(value As String)
    End Sub
    Partial Private Sub OnDS_SIMBO_MONEDAChanged()
    End Sub
    Partial Private Sub OnFACT_CONVERSIONChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnFACT_CONVERSIONChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DS_NOM_MODENA", DbType:="VarChar(25)")>  _
	Public Property DS_NOM_MODENA() As String
		Get
			Return Me._DS_NOM_MODENA
		End Get
		Set
			If (String.Equals(Me._DS_NOM_MODENA, value) = false) Then
				Me.OnDS_NOM_MODENAChanging(value)
				Me.SendPropertyChanging
				Me._DS_NOM_MODENA = value
				Me.SendPropertyChanged("DS_NOM_MODENA")
				Me.OnDS_NOM_MODENAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DS_SIMBO_MONEDA", DbType:="VarChar(10)")>  _
	Public Property DS_SIMBO_MONEDA() As String
		Get
			Return Me._DS_SIMBO_MONEDA
		End Get
		Set
			If (String.Equals(Me._DS_SIMBO_MONEDA, value) = false) Then
				Me.OnDS_SIMBO_MONEDAChanging(value)
				Me.SendPropertyChanging
				Me._DS_SIMBO_MONEDA = value
				Me.SendPropertyChanged("DS_SIMBO_MONEDA")
				Me.OnDS_SIMBO_MONEDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FACT_CONVERSION", DbType:="Decimal(18,6)")>  _
	Public Property FACT_CONVERSION() As System.Nullable(Of Decimal)
		Get
			Return Me._FACT_CONVERSION
		End Get
		Set
			If (Me._FACT_CONVERSION.Equals(value) = false) Then
				Me.OnFACT_CONVERSIONChanging(value)
				Me.SendPropertyChanging
				Me._FACT_CONVERSION = value
				Me.SendPropertyChanged("FACT_CONVERSION")
				Me.OnFACT_CONVERSIONChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.AUDI_CUEN_FILIALES")>  _
Partial Public Class AUDI_CUEN_FILIALES
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _DS_NOMB_FILIAL As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnDS_NOMB_FILIALChanging(value As String)
    End Sub
    Partial Private Sub OnDS_NOMB_FILIALChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DS_NOMB_FILIAL", DbType:="VarChar(50)")>  _
	Public Property DS_NOMB_FILIAL() As String
		Get
			Return Me._DS_NOMB_FILIAL
		End Get
		Set
			If (String.Equals(Me._DS_NOMB_FILIAL, value) = false) Then
				Me.OnDS_NOMB_FILIALChanging(value)
				Me.SendPropertyChanging
				Me._DS_NOMB_FILIAL = value
				Me.SendPropertyChanged("DS_NOMB_FILIAL")
				Me.OnDS_NOMB_FILIALChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
